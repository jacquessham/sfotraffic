-- Clean data for pax stats
INSERT INTO SRC__SFO_STATS.SRC__CLEAN__PASSENGER_STATISTICS(
	ACTIVITY_PERIOD,
	OP_AIRLINES,
	OP_CODE,
	PUB_AIRLINES,
	PUB_CODE,
	GEO_SUMM,
	GEO_REGION,
	ACTIVITY_TYPE,
	PRICE,
	TERMINAL,
	BOARDING_AREA,
	PAX_COUNT,
	UPLOAD_TIMESTAMP,
	UPLOAD_TAG,
	UPLOAD_VERSION
) SELECT 
	(to_date(ACTIVITY_PERIOD, 'YYYYMM') + interval '1 month - 1 day')::date as ACTIVITY_PERIOD,
	OP_AIRLINES,
	OP_CODE,
	CASE 
		WHEN PUB_AIRLINES IN ('United Airlines - Pre 07/01/2013') THEN 'United Airlines'
		WHEN PUB_AIRLINES IN ('Emirates ','Emirates') THEN 'Emirates'
		WHEN PUB_AIRLINES IN ('Icelandair (Inactive)','Icelandair EHF') THEN 'Icelandair'
		WHEN PUB_AIRLINES IN ('Northwest Airlines (became Delta)') THEN 'Delta Air Lines'
		ELSE PUB_AIRLINES
	END AS PUB_AIRLINES,
	PUB_CODE,
	GEO_SUMM,
	GEO_REGION,
	ACTIVITY_TYPE,
	CASE 
		WHEN PRICE IN ('Other') THEN 'Full Service'
		WHEN PUB_AIRLINES IN ('Air China', 'Air India Limited', 'Air New Zealand', 
                 				'Air Pacific Limited dba Fiji Airways',
                 				'Emirates', 'United Airlines', 'Virgin America', 
                 				'Volaris Airlines', 'Delta Air Lines',
                 				'US Airways') 
			THEN 'Full Service'
		WHEN PUB_AIRLINES IN ('XL Airways France', 'WOW Air', 'WestJet Airlines', 
								'Norwegian Air Shuttle ASA')
			THEN 'Full Service'
		ELSE PRICE 
	END AS PRICE,
	TERMINAL,
	BOARDING_AREA,
	PAX_COUNT::NUMERIC(12,0) ,
	UPLOAD_TIMESTAMP,
	UPLOAD_TAG,
	UPLOAD_VERSION
FROM SRC__SFO_STATS.SRC__PASSENGER_STATISTICS
WHERE UPLOAD_VERSION > (
	SELECT CASE WHEN MAX(UPLOAD_VERSION) IS NULL THEN 0 ELSE MAX(UPLOAD_VERSION) END
	FROM SRC__SFO_STATS.SRC__CLEAN__PASSENGER_STATISTICS)
;

-- Clean data for cargo stats
-- Need to do EDA before implementing the transformation
INSERT INTO SRC__SFO_STATS.SRC__CLEAN__CARGO_STATISTICS(
	ACTIVITY_PERIOD,
	OP_AIRLINES,
	OP_CODE,
	PUB_AIRLINES,
	PUB_CODE,
	GEO_SUMM,
	GEO_REGION,
	ACTIVITY_TYPE,
	CARGO_TYPE,
	CARGO_AIRCRAFT_TYPE,
	CARGO_WEIGHT_LBS,
	CARGO_WEIGHT_TONS,
	UPLOAD_TIMESTAMP,
	UPLOAD_TAG,
	UPLOAD_VERSION
) SELECT
	(to_date(ACTIVITY_PERIOD, 'YYYYMM') + interval '1 month - 1 day')::date as ACTIVITY_PERIOD,
	OP_AIRLINES,
	OP_CODE,
	PUB_AIRLINES,
	PUB_CODE,
	GEO_SUMM,
	GEO_REGION,
	ACTIVITY_TYPE,
	CARGO_TYPE,
	CARGO_AIRCRAFT_TYPE,
	CARGO_WEIGHT_LBS::NUMERIC(12,0),
	CARGO_WEIGHT_TONS::NUMERIC(12,0),
	UPLOAD_TIMESTAMP,
	UPLOAD_TAG,
	UPLOAD_VERSION

FROM SRC__SFO_STATS.SRC__CARGO_STATISTICS
WHERE UPLOAD_VERSION > (
	SELECT CASE WHEN MAX(UPLOAD_VERSION) IS NULL THEN 0 ELSE MAX(UPLOAD_VERSION) END
	FROM SRC__SFO_STATS.SRC__CLEAN__CARGO_STATISTICS)
;

-- Clean data for landing stats
-- Need to do EDA before implementing the transformation
INSERT INTO SRC__SFO_STATS.SRC__CLEAN__LANDING_STATISTICS(
	ACTIVITY_PERIOD,
	OP_AIRLINES,
	OP_CODE,
	PUB_AIRLINES,
	PUB_CODE,
	GEO_SUMM,
	GEO_REGION,
	LANDING_AIRCRAFT_TYPE,
	BODY_TYPE,
	AIRCRAFT_MANU,
	AIRCRAFT_MODEL,
	AIRCRAFT_VERSION,
	LANDING_COUNT,
	TOTAL_LANDED_WEIGHT,
	UPLOAD_TIMESTAMP,
	UPLOAD_TAG,
	UPLOAD_VERSION
) SELECT
	(to_date(ACTIVITY_PERIOD, 'YYYYMM') + interval '1 month - 1 day')::date as ACTIVITY_PERIOD,
	OP_AIRLINES,
	OP_CODE,
	PUB_AIRLINES,
	PUB_CODE,
	GEO_SUMM,
	GEO_REGION,
	LANDING_AIRCRAFT_TYPE,
	BODY_TYPE,
	AIRCRAFT_MANU,
	AIRCRAFT_MODEL,
	AIRCRAFT_VERSION,
	LANDING_COUNT::NUMERIC(12,0),
	TOTAL_LANDED_WEIGHT::NUMERIC(12,0),
	UPLOAD_TIMESTAMP,
	UPLOAD_TAG,
	UPLOAD_VERSION
FROM SRC__SFO_STATS.SRC__LANDING_STATISTICS
WHERE UPLOAD_VERSION > (
	SELECT CASE WHEN MAX(UPLOAD_VERSION) IS NULL THEN 0 ELSE MAX(UPLOAD_VERSION) END
	FROM SRC__SFO_STATS.SRC__CLEAN__LANDING_STATISTICS)
;
